#
# Copyright 2004-2010 the Seasar Foundation and the Others.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied. See the License for the specific language
# governing permissions and limitations under the License.
#

# validation error messages
valid.required={0} : required.
valid.maxLength={0} length <= {1} characters.
valid.number={0} : only number.
valid.integer={0} : only integer number.
valid.enum={0} : illegal value.
valid.equals={0} : not equal {1}.
valid.range={0} : between {1} - {2}.
valid.dateFormat={0} : invalid date format.
valid.regexp={0} : invalid string.
valid.rangeLength={0} : length >= {1} and <= {2}.
valid.arrayMaxSize={0} : selects <= {1}.
valid.arrayMinSize={0} : selects >= {1}.
valid.fileRegexp={0} : invalid filename. 
valid.email={0} : illegal mail address.
valid.token=double submit or access from illegal route. 
valid.multipartRequsetParser.sizeLimitExceeded=file size of upload file must be <= {0} bytes. (uploaded file size = {1})

# OVal messages
# {context} = the validation context (e.g. a field, a method return value or a constructor/method parameter
# {invalidValue} = the value that has been checked
net.sf.oval.constraint.Assert.violated={context} does not satisfy condition: {expression}
net.sf.oval.constraint.AssertFalse.violated={context} is not false
net.sf.oval.constraint.AssertTrue.violated={context} is not true
net.sf.oval.constraint.CheckWith.violated={context} {simpleCheck} not satisfied
net.sf.oval.constraint.DateRange.violated={context} is not in the range {min} through {max}
net.sf.oval.constraint.Email.violated={context} is not a valid e-mail address
net.sf.oval.constraint.EqualToField.violated={context} is not equal to field {fieldName}
net.sf.oval.constraint.Future.violated={context} must be in the future
net.sf.oval.constraint.HasSubstring.violated={context} must contain the substring '{substring}'
net.sf.oval.constraint.InstanceOf.violated={context} must be an instance of {types}
net.sf.oval.constraint.InstanceOfAny.violated={context} must be an instance of {types}
net.sf.oval.constraint.Length.violated={context} is not between {min} and {max} characters long
net.sf.oval.constraint.MatchPattern.violated={context} does not match the pattern {pattern}
net.sf.oval.constraint.Max.violated={context} cannot be greater than {max}
net.sf.oval.constraint.MaxLength.violated={context} cannot be longer than {max} characters
net.sf.oval.constraint.MaxSize.violated={context} cannot have more than {max} elements
net.sf.oval.constraint.MemberOf.violated={context} must be one of these values: {members}
net.sf.oval.constraint.Min.violated={context} cannot be smaller than {min}
net.sf.oval.constraint.MinLength.violated={context} cannot be smaller than {min} characters
net.sf.oval.constraint.MinSize.violated={context} cannot have less than {min} elements
net.sf.oval.constraint.NoSelfReference.violated={context} illegal self reference
net.sf.oval.constraint.NotBlank.violated={context} cannot be blank
net.sf.oval.constraint.NotEmpty.violated={context} cannot be empty
net.sf.oval.constraint.NotEqual.violated={context} must not equal {testString}
net.sf.oval.constraint.NotEqualToField.violated={context} must not equal to field {fieldName}
net.sf.oval.constraint.NotMemberOf.violated={context} must not be one of these values: {members}
net.sf.oval.constraint.NotNegative.violated={context} cannot be negative
net.sf.oval.constraint.NotNull.violated={context} cannot be null
net.sf.oval.constraint.Past.violated={context} must be in the past
net.sf.oval.constraint.Range.violated={context} is not in the range {min} through {max}
net.sf.oval.constraint.Size.violated={context} does not have between {min} and {max} elements
net.sf.oval.constraint.ValidateWithMethod.violated={context} indicated to be invalid by method {methodName}({parameterType})

net.sf.oval.guard.Pre.violated={context} does not satisfy pre condition: {expression}
net.sf.oval.guard.Post.violated={context} does not satisfy post condition: {expression}

net.sf.oval.exception.AccessingFieldValueFailedException.message=Accessing value of field {fieldName} failed.
net.sf.oval.exception.ConstraintSetAlreadyDefinedException.message=Another constraint set with the same fully qualified id {constraintSetId} has already been defined.
net.sf.oval.exception.ExpressionLanguageNotAvailableException.message=Expression language {languageId} is not available.
net.sf.oval.exception.UndefinedConstraintSetException.message=No constraint set with id {constraintSetId} defined.
net.sf.oval.exception.InvokingMethodFailedException.message=Invoking method {methodName} failed.

net.sf.oval.context.ConstructorParameterContext.parameter=parameter
net.sf.oval.context.MethodParameterContext.parameter=parameter

# application messages
msg.dummy=Dummy message.
name=your name